/**
 * # base.scss
 * 1. A modern CSS reset
 * 2.
 */

 *,
 *::before,
 *::after {
  box-sizing: border-box
}

body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul[role="list"],
ol[role="list"] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media(prefers-reduced-motion:reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *, *::before,
  *::after {
    animation-duration: .01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: .01ms !important;
    scroll-behavior: auto !important;
  }
}

/**
 * original initialization
 */
html {
  /* All browsers without overlaying scrollbars */
  text-size-adjust: 100%;
  font-size: 100%;
  /* for using REM units */
  overflow-y: scroll;
  /* apply a natural box layout model to all elements, but allowing components to change */
  box-sizing: border-box;
  writing-mode: horizontal-tb;
}

body {
  min-height: 100vh;
  margin: 0;
  line-height: 1.5;
  font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Hiragino Kaku Gothic ProN, Hiragino Sans, BIZ UDPGothic, Meiryo, sans-serif;
  font-weight: 400;
  font-feature-settings: "pkna" 1;
  color: hsla(0, 0%, 20%, 1);
  box-sizing: border-box;
  direction: ltr;
}

*::before,
*::after {
  background-repeat: no-repeat;
  /* Inherit text-decoration and vertical align to ::before and ::after pseudo elements */
  vertical-align: inherit;
  text-decoration: inherit;
  /* Set `background-repeat: no-repeat` to all elements and pseudo elements */
  box-sizing: inherit;
}

a:hover,
a:focus {
  text-decoration: none;
}

ul,
ol {
  list-style: none;
}

address {
  margin-bottom: 1rem;
  line-height: inherit;
  font-style: normal;
}

img {
  height: auto;
  max-width: 100%;
  border-style: none;
  vertical-align: middle;
}

svg {
  vertical-align: middle;
  overflow: hidden;
}

table {
  border-collapse: collapse;
}

caption {
  padding-top: .75rem;
  padding-bottom: .75rem;
  caption-side: bottom;
  text-align: left;
  color: hsla(208, 7%, 46%, 1);
}

th {
  text-align: inherit;
}

label {
  display: inline-block;
  margin-bottom: .5rem;
}

/* Remove the default button styling in all browsers */
button,
input,
select,
textarea {
  padding: 0;
  border-style: none;
  background-color: transparent;
  color: inherit;
}

dfn {
  font-style: normal;
}

/* Specify text selection background color and omit drop shadow */
::-moz-selection {
  background-color: hsla(213, 92%, 85%, 1);
  text-shadow: none;
  /* Required when declaring ::selection */
  color: hsla(0, 0%, 0%, 1);
}

::selection {
  background-color: hsla(213, 92%, 85%, 1);
  text-shadow: none;
  /* Required when declaring ::selection */
  color: hsla(0, 0%, 0%, 1);
}

::-webkit-input-placeholder {
  color: hsla(0, 0%, 44%, 1);
}
:-ms-input-placeholder {
  color: hsla(0, 0%, 44%, 1);
}
::-moz-placeholder {
  color: hsla(0, 0%, 44%, 1);
}

:placeholder-shown {
  color: hsla(0, 0%, 47%, 1);
}

/**
 * web accessibility
 * マウス/タッチイベント時のフォーカスリングスタイル打消
 * キーボードフォーカス時のみフォーカススタイル有効
 */
[data-whatinput="mouse"] *:focus,
[data-whatinput="touch"] *:focus {
  outline: none;
}

[tabindex="-1"]:focus {
  outline: none !important;
}

/**
  * すべてのインタラクティブ・コンテンツ(要素)に対し、
  * focus-ringに独自カスタム疑似スタイルを定義
  */
[data-whatinput="keyboard"] a,
[data-whatinput="keyboard"] audio,
[data-whatinput="keyboard"] button,
[data-whatinput="keyboard"] details,
[data-whatinput="keyboard"] summary,
[data-whatinput="keyboard"] embed,
[data-whatinput="keyboard"] iframe,
[data-whatinput="keyboard"] img[usemap],
[data-whatinput="keyboard"] input:not([hidden]),
[data-whatinput="keyboard"] keygen,
[data-whatinput="keyboard"] label,
[data-whatinput="keyboard"] object[usemap],
[data-whatinput="keyboard"] select,
[data-whatinput="keyboard"] textarea,
[data-whatinput="keyboard"] video {
  transition: outline .15s cubic-bezier(.47, 0, .745, .715);
  outline: none;
  outline-offset: .0625rem;
}

[data-whatinput="keyboard"] a:focus,
[data-whatinput="keyboard"] audio:focus,
[data-whatinput="keyboard"] button:focus,
[data-whatinput="keyboard"] details:focus,
[data-whatinput="keyboard"] summary:focus,
[data-whatinput="keyboard"] embed:focus,
[data-whatinput="keyboard"] iframe:focus,
[data-whatinput="keyboard"] img[usemap]:focus,
[data-whatinput="keyboard"] input:not([hidden]):focus,
[data-whatinput="keyboard"] keygen:focus,
[data-whatinput="keyboard"] label:focus,
[data-whatinput="keyboard"] object[usemap]:focus,
[data-whatinput="keyboard"] select:focus,
[data-whatinput="keyboard"] textarea:focus,
[data-whatinput="keyboard"] video:focus {
  outline: .125rem solid var(--focusring-color);
  outline-offset: .0625rem;
}

/**
 * WAI-ARIA
 */

/* Specify the progress cursor of updating elements */
[aria-busy="true"] {
  cursor: progress;
}

/* Specify the pointer cursor of trigger elements */
[aria-controls] {
  cursor: pointer;
}

/* Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements */
[aria-disabled] {
  cursor: default;
}